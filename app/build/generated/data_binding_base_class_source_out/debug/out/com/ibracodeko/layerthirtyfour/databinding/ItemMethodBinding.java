// Generated by view binder compiler. Do not edit!
package com.ibracodeko.layerthirtyfour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ibracodeko.layerthirtyfour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMethodBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardMethod;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final Switch switchEnabled;

  @NonNull
  public final TextView tvMethodDescription;

  @NonNull
  public final TextView tvMethodEndpoint;

  @NonNull
  public final TextView tvMethodName;

  @NonNull
  public final TextView tvMethodType;

  private ItemMethodBinding(@NonNull CardView rootView, @NonNull CardView cardMethod,
      @NonNull ImageView ivDelete, @NonNull ImageView ivEdit, @NonNull Switch switchEnabled,
      @NonNull TextView tvMethodDescription, @NonNull TextView tvMethodEndpoint,
      @NonNull TextView tvMethodName, @NonNull TextView tvMethodType) {
    this.rootView = rootView;
    this.cardMethod = cardMethod;
    this.ivDelete = ivDelete;
    this.ivEdit = ivEdit;
    this.switchEnabled = switchEnabled;
    this.tvMethodDescription = tvMethodDescription;
    this.tvMethodEndpoint = tvMethodEndpoint;
    this.tvMethodName = tvMethodName;
    this.tvMethodType = tvMethodType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMethodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMethodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_method, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMethodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardMethod = (CardView) rootView;

      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.ivEdit;
      ImageView ivEdit = ViewBindings.findChildViewById(rootView, id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.switchEnabled;
      Switch switchEnabled = ViewBindings.findChildViewById(rootView, id);
      if (switchEnabled == null) {
        break missingId;
      }

      id = R.id.tvMethodDescription;
      TextView tvMethodDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvMethodDescription == null) {
        break missingId;
      }

      id = R.id.tvMethodEndpoint;
      TextView tvMethodEndpoint = ViewBindings.findChildViewById(rootView, id);
      if (tvMethodEndpoint == null) {
        break missingId;
      }

      id = R.id.tvMethodName;
      TextView tvMethodName = ViewBindings.findChildViewById(rootView, id);
      if (tvMethodName == null) {
        break missingId;
      }

      id = R.id.tvMethodType;
      TextView tvMethodType = ViewBindings.findChildViewById(rootView, id);
      if (tvMethodType == null) {
        break missingId;
      }

      return new ItemMethodBinding((CardView) rootView, cardMethod, ivDelete, ivEdit, switchEnabled,
          tvMethodDescription, tvMethodEndpoint, tvMethodName, tvMethodType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
