// Generated by view binder compiler. Do not edit!
package com.ibracodeko.layerthirtyfour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.ibracodeko.layerthirtyfour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final CardView cardAbout;

  @NonNull
  public final CardView cardClearCache;

  @NonNull
  public final CardView cardExportData;

  @NonNull
  public final CardView cardTheme;

  @NonNull
  public final LottieAnimationView settingsAnimation;

  @NonNull
  public final Switch switchNotifications;

  @NonNull
  public final Switch switchOfflineMode;

  @NonNull
  public final Switch switchSounds;

  @NonNull
  public final Switch switchVibration;

  @NonNull
  public final TextView tvCacheSize;

  @NonNull
  public final TextView tvCurrentTheme;

  @NonNull
  public final TextView tvUserInfo;

  private ActivitySettingsBinding(@NonNull ScrollView rootView, @NonNull Button btnLogout,
      @NonNull CardView cardAbout, @NonNull CardView cardClearCache,
      @NonNull CardView cardExportData, @NonNull CardView cardTheme,
      @NonNull LottieAnimationView settingsAnimation, @NonNull Switch switchNotifications,
      @NonNull Switch switchOfflineMode, @NonNull Switch switchSounds,
      @NonNull Switch switchVibration, @NonNull TextView tvCacheSize,
      @NonNull TextView tvCurrentTheme, @NonNull TextView tvUserInfo) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.cardAbout = cardAbout;
    this.cardClearCache = cardClearCache;
    this.cardExportData = cardExportData;
    this.cardTheme = cardTheme;
    this.settingsAnimation = settingsAnimation;
    this.switchNotifications = switchNotifications;
    this.switchOfflineMode = switchOfflineMode;
    this.switchSounds = switchSounds;
    this.switchVibration = switchVibration;
    this.tvCacheSize = tvCacheSize;
    this.tvCurrentTheme = tvCurrentTheme;
    this.tvUserInfo = tvUserInfo;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.cardAbout;
      CardView cardAbout = ViewBindings.findChildViewById(rootView, id);
      if (cardAbout == null) {
        break missingId;
      }

      id = R.id.cardClearCache;
      CardView cardClearCache = ViewBindings.findChildViewById(rootView, id);
      if (cardClearCache == null) {
        break missingId;
      }

      id = R.id.cardExportData;
      CardView cardExportData = ViewBindings.findChildViewById(rootView, id);
      if (cardExportData == null) {
        break missingId;
      }

      id = R.id.cardTheme;
      CardView cardTheme = ViewBindings.findChildViewById(rootView, id);
      if (cardTheme == null) {
        break missingId;
      }

      id = R.id.settingsAnimation;
      LottieAnimationView settingsAnimation = ViewBindings.findChildViewById(rootView, id);
      if (settingsAnimation == null) {
        break missingId;
      }

      id = R.id.switchNotifications;
      Switch switchNotifications = ViewBindings.findChildViewById(rootView, id);
      if (switchNotifications == null) {
        break missingId;
      }

      id = R.id.switchOfflineMode;
      Switch switchOfflineMode = ViewBindings.findChildViewById(rootView, id);
      if (switchOfflineMode == null) {
        break missingId;
      }

      id = R.id.switchSounds;
      Switch switchSounds = ViewBindings.findChildViewById(rootView, id);
      if (switchSounds == null) {
        break missingId;
      }

      id = R.id.switchVibration;
      Switch switchVibration = ViewBindings.findChildViewById(rootView, id);
      if (switchVibration == null) {
        break missingId;
      }

      id = R.id.tvCacheSize;
      TextView tvCacheSize = ViewBindings.findChildViewById(rootView, id);
      if (tvCacheSize == null) {
        break missingId;
      }

      id = R.id.tvCurrentTheme;
      TextView tvCurrentTheme = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentTheme == null) {
        break missingId;
      }

      id = R.id.tvUserInfo;
      TextView tvUserInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvUserInfo == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, btnLogout, cardAbout,
          cardClearCache, cardExportData, cardTheme, settingsAnimation, switchNotifications,
          switchOfflineMode, switchSounds, switchVibration, tvCacheSize, tvCurrentTheme,
          tvUserInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
