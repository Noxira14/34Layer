// Generated by view binder compiler. Do not edit!
package com.ibracodeko.layerthirtyfour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.ibracodeko.layerthirtyfour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final Button btnThemeToggle;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final TextInputEditText etUsername;

  @NonNull
  public final FrameLayout loadingOverlay;

  @NonNull
  public final LottieAnimationView registerAnimation;

  @NonNull
  public final TextInputLayout tilConfirmPassword;

  @NonNull
  public final TextInputLayout tilEmail;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextInputLayout tilUsername;

  private ActivityRegisterBinding(@NonNull ScrollView rootView, @NonNull Button btnLogin,
      @NonNull Button btnRegister, @NonNull Button btnThemeToggle,
      @NonNull TextInputEditText etConfirmPassword, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etPassword, @NonNull TextInputEditText etUsername,
      @NonNull FrameLayout loadingOverlay, @NonNull LottieAnimationView registerAnimation,
      @NonNull TextInputLayout tilConfirmPassword, @NonNull TextInputLayout tilEmail,
      @NonNull TextInputLayout tilPassword, @NonNull TextInputLayout tilUsername) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnRegister = btnRegister;
    this.btnThemeToggle = btnThemeToggle;
    this.etConfirmPassword = etConfirmPassword;
    this.etEmail = etEmail;
    this.etPassword = etPassword;
    this.etUsername = etUsername;
    this.loadingOverlay = loadingOverlay;
    this.registerAnimation = registerAnimation;
    this.tilConfirmPassword = tilConfirmPassword;
    this.tilEmail = tilEmail;
    this.tilPassword = tilPassword;
    this.tilUsername = tilUsername;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.btnThemeToggle;
      Button btnThemeToggle = ViewBindings.findChildViewById(rootView, id);
      if (btnThemeToggle == null) {
        break missingId;
      }

      id = R.id.etConfirmPassword;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etPassword;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etUsername;
      TextInputEditText etUsername = ViewBindings.findChildViewById(rootView, id);
      if (etUsername == null) {
        break missingId;
      }

      id = R.id.loadingOverlay;
      FrameLayout loadingOverlay = ViewBindings.findChildViewById(rootView, id);
      if (loadingOverlay == null) {
        break missingId;
      }

      id = R.id.registerAnimation;
      LottieAnimationView registerAnimation = ViewBindings.findChildViewById(rootView, id);
      if (registerAnimation == null) {
        break missingId;
      }

      id = R.id.tilConfirmPassword;
      TextInputLayout tilConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmPassword == null) {
        break missingId;
      }

      id = R.id.tilEmail;
      TextInputLayout tilEmail = ViewBindings.findChildViewById(rootView, id);
      if (tilEmail == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tilUsername;
      TextInputLayout tilUsername = ViewBindings.findChildViewById(rootView, id);
      if (tilUsername == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ScrollView) rootView, btnLogin, btnRegister,
          btnThemeToggle, etConfirmPassword, etEmail, etPassword, etUsername, loadingOverlay,
          registerAnimation, tilConfirmPassword, tilEmail, tilPassword, tilUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
