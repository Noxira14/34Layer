// Generated by view binder compiler. Do not edit!
package com.ibracodeko.layerthirtyfour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.ibracodeko.layerthirtyfour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWebMultiportingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AutoCompleteTextView actvMethod;

  @NonNull
  public final MaterialButton btnSubmit;

  @NonNull
  public final TextInputEditText etDomain;

  @NonNull
  public final TextInputEditText etTime;

  @NonNull
  public final LottieAnimationView loadingAnimation;

  @NonNull
  public final FrameLayout loadingOverlay;

  @NonNull
  public final MaterialCardView resultContainer;

  @NonNull
  public final TextInputLayout tilDomain;

  @NonNull
  public final TextInputLayout tilMethod;

  @NonNull
  public final TextInputLayout tilTime;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvResult;

  private ActivityWebMultiportingBinding(@NonNull LinearLayout rootView,
      @NonNull AutoCompleteTextView actvMethod, @NonNull MaterialButton btnSubmit,
      @NonNull TextInputEditText etDomain, @NonNull TextInputEditText etTime,
      @NonNull LottieAnimationView loadingAnimation, @NonNull FrameLayout loadingOverlay,
      @NonNull MaterialCardView resultContainer, @NonNull TextInputLayout tilDomain,
      @NonNull TextInputLayout tilMethod, @NonNull TextInputLayout tilTime,
      @NonNull Toolbar toolbar, @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.actvMethod = actvMethod;
    this.btnSubmit = btnSubmit;
    this.etDomain = etDomain;
    this.etTime = etTime;
    this.loadingAnimation = loadingAnimation;
    this.loadingOverlay = loadingOverlay;
    this.resultContainer = resultContainer;
    this.tilDomain = tilDomain;
    this.tilMethod = tilMethod;
    this.tilTime = tilTime;
    this.toolbar = toolbar;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWebMultiportingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWebMultiportingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_web_multiporting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWebMultiportingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actvMethod;
      AutoCompleteTextView actvMethod = ViewBindings.findChildViewById(rootView, id);
      if (actvMethod == null) {
        break missingId;
      }

      id = R.id.btnSubmit;
      MaterialButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.etDomain;
      TextInputEditText etDomain = ViewBindings.findChildViewById(rootView, id);
      if (etDomain == null) {
        break missingId;
      }

      id = R.id.etTime;
      TextInputEditText etTime = ViewBindings.findChildViewById(rootView, id);
      if (etTime == null) {
        break missingId;
      }

      id = R.id.loadingAnimation;
      LottieAnimationView loadingAnimation = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimation == null) {
        break missingId;
      }

      id = R.id.loadingOverlay;
      FrameLayout loadingOverlay = ViewBindings.findChildViewById(rootView, id);
      if (loadingOverlay == null) {
        break missingId;
      }

      id = R.id.resultContainer;
      MaterialCardView resultContainer = ViewBindings.findChildViewById(rootView, id);
      if (resultContainer == null) {
        break missingId;
      }

      id = R.id.tilDomain;
      TextInputLayout tilDomain = ViewBindings.findChildViewById(rootView, id);
      if (tilDomain == null) {
        break missingId;
      }

      id = R.id.tilMethod;
      TextInputLayout tilMethod = ViewBindings.findChildViewById(rootView, id);
      if (tilMethod == null) {
        break missingId;
      }

      id = R.id.tilTime;
      TextInputLayout tilTime = ViewBindings.findChildViewById(rootView, id);
      if (tilTime == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvResult;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      return new ActivityWebMultiportingBinding((LinearLayout) rootView, actvMethod, btnSubmit,
          etDomain, etTime, loadingAnimation, loadingOverlay, resultContainer, tilDomain, tilMethod,
          tilTime, toolbar, tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
