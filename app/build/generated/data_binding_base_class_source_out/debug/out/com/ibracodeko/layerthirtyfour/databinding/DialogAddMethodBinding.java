// Generated by view binder compiler. Do not edit!
package com.ibracodeko.layerthirtyfour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.ibracodeko.layerthirtyfour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddMethodBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AutoCompleteTextView actvType;

  @NonNull
  public final TextInputEditText etDescription;

  @NonNull
  public final TextInputEditText etEndpoint;

  @NonNull
  public final TextInputEditText etMethodName;

  @NonNull
  public final TextInputLayout tilDescription;

  @NonNull
  public final TextInputLayout tilEndpoint;

  @NonNull
  public final TextInputLayout tilMethodName;

  @NonNull
  public final TextInputLayout tilType;

  private DialogAddMethodBinding(@NonNull ScrollView rootView,
      @NonNull AutoCompleteTextView actvType, @NonNull TextInputEditText etDescription,
      @NonNull TextInputEditText etEndpoint, @NonNull TextInputEditText etMethodName,
      @NonNull TextInputLayout tilDescription, @NonNull TextInputLayout tilEndpoint,
      @NonNull TextInputLayout tilMethodName, @NonNull TextInputLayout tilType) {
    this.rootView = rootView;
    this.actvType = actvType;
    this.etDescription = etDescription;
    this.etEndpoint = etEndpoint;
    this.etMethodName = etMethodName;
    this.tilDescription = tilDescription;
    this.tilEndpoint = tilEndpoint;
    this.tilMethodName = tilMethodName;
    this.tilType = tilType;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddMethodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddMethodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_method, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddMethodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actvType;
      AutoCompleteTextView actvType = ViewBindings.findChildViewById(rootView, id);
      if (actvType == null) {
        break missingId;
      }

      id = R.id.etDescription;
      TextInputEditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etEndpoint;
      TextInputEditText etEndpoint = ViewBindings.findChildViewById(rootView, id);
      if (etEndpoint == null) {
        break missingId;
      }

      id = R.id.etMethodName;
      TextInputEditText etMethodName = ViewBindings.findChildViewById(rootView, id);
      if (etMethodName == null) {
        break missingId;
      }

      id = R.id.tilDescription;
      TextInputLayout tilDescription = ViewBindings.findChildViewById(rootView, id);
      if (tilDescription == null) {
        break missingId;
      }

      id = R.id.tilEndpoint;
      TextInputLayout tilEndpoint = ViewBindings.findChildViewById(rootView, id);
      if (tilEndpoint == null) {
        break missingId;
      }

      id = R.id.tilMethodName;
      TextInputLayout tilMethodName = ViewBindings.findChildViewById(rootView, id);
      if (tilMethodName == null) {
        break missingId;
      }

      id = R.id.tilType;
      TextInputLayout tilType = ViewBindings.findChildViewById(rootView, id);
      if (tilType == null) {
        break missingId;
      }

      return new DialogAddMethodBinding((ScrollView) rootView, actvType, etDescription, etEndpoint,
          etMethodName, tilDescription, tilEndpoint, tilMethodName, tilType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
