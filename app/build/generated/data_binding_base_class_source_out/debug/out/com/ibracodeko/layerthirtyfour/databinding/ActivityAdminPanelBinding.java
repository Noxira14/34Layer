// Generated by view binder compiler. Do not edit!
package com.ibracodeko.layerthirtyfour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ibracodeko.layerthirtyfour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminPanelBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout emptyState;

  @NonNull
  public final FloatingActionButton fabAddMethod;

  @NonNull
  public final LottieAnimationView loadingAnimation;

  @NonNull
  public final FrameLayout loadingOverlay;

  @NonNull
  public final RecyclerView recyclerMethods;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAdminPanelBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout emptyState, @NonNull FloatingActionButton fabAddMethod,
      @NonNull LottieAnimationView loadingAnimation, @NonNull FrameLayout loadingOverlay,
      @NonNull RecyclerView recyclerMethods, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.emptyState = emptyState;
    this.fabAddMethod = fabAddMethod;
    this.loadingAnimation = loadingAnimation;
    this.loadingOverlay = loadingOverlay;
    this.recyclerMethods = recyclerMethods;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyState;
      LinearLayout emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.fabAddMethod;
      FloatingActionButton fabAddMethod = ViewBindings.findChildViewById(rootView, id);
      if (fabAddMethod == null) {
        break missingId;
      }

      id = R.id.loadingAnimation;
      LottieAnimationView loadingAnimation = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimation == null) {
        break missingId;
      }

      id = R.id.loadingOverlay;
      FrameLayout loadingOverlay = ViewBindings.findChildViewById(rootView, id);
      if (loadingOverlay == null) {
        break missingId;
      }

      id = R.id.recyclerMethods;
      RecyclerView recyclerMethods = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMethods == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAdminPanelBinding((RelativeLayout) rootView, emptyState, fabAddMethod,
          loadingAnimation, loadingOverlay, recyclerMethods, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
